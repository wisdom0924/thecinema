{"version":3,"sources":["assets/noPoster.png","Components/Movie.js","Routes/Home.js","Components/Program.js","Routes/TV.js","Routes/Search.js","Routes/Detail.js","Routes/DetailTV.js","App.js","serviceWorker.js","GlobalStyles.js","index.js"],"names":["module","exports","Movie","id","title","lang","overview","poster","date","rating","genres","backdrop","to","pathname","state","src","require","alt","className","slice","MovieListTitle","styled","div","Home","isLoading","nowplaying","upcoming","popular","getNowplaying","a","axios","get","results","data","setState","getUpcomming","getPopular","this","map","key","original_language","poster_path","release_date","vote_average","genre_ids","backdrop_path","React","Component","Program","name","error","topRated","airingToday","getTVpopular","catch","console","log","getTopRated","getAiringToday","original_name","first_air_date","Form","form","Input","input","searchlist","searchingText","tvsearchlist","onChange","event","value","target","handleSubmit","e","preventDefault","movieSearch","onSubmit","placeholder","autoFocus","DetailContent","Poster","props","bgImage","DetailBlock","Image","DetailText","Bullet","Detail","location","history","undefined","push","substring","DetailTV","Header","ul","App","activestyle","background","color","exact","activeStyle","activeClassName","path","component","TV","Search","render","Boolean","window","hostname","match","GlobalStyles","createGlobalStyle","reset","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.f56b986e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPoster.c7ad09df.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport './Movie.scss';\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  lang: PropTypes.string.isRequired,\r\n  overview: PropTypes.string.isRequired,\r\n  poster: PropTypes.string,\r\n  date: PropTypes.string.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  // backdrop: PropTypes.string.isRequired,\r\n};\r\n\r\nfunction Movie({ id, title, lang, overview, poster, date, rating, genres, backdrop }) {\r\n  return (\r\n    <li>\r\n      <Link\r\n        to={{\r\n          pathname: `/movie/${id}`,\r\n          state: {\r\n            title,\r\n            overview,\r\n            poster,\r\n            date,\r\n            lang,\r\n            genres,\r\n            backdrop,\r\n          },\r\n        }}\r\n      >\r\n        {/* <img src={`https://image.tmdb.org/t/p/w500${poster}`} alt={title} title={title}></img> */}\r\n\r\n        <img src={poster ? `https://image.tmdb.org/t/p/w500${poster}` : require('../assets/noPoster.png')} alt={title} title={title} />\r\n        <div className=\"list__text\">\r\n          <h5>{title}</h5>\r\n          <span>★{rating}</span>\r\n          {/* <span>{genres}</span> */}\r\n        </div>\r\n        <h4>{date.slice(0, 4)}</h4>\r\n      </Link>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../Components/Movie';\r\nimport styled from 'styled-components';\r\nimport './Home.scss';\r\n\r\nconst MovieListTitle = styled.div`\r\n  /* border: 1px solid red; */\r\n  color: #fff;\r\n  font-size: 18px;\r\n  padding: 20px 0 0 10px;\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n`;\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    nowplaying: [],\r\n    upcoming: [],\r\n    popular: [],\r\n  };\r\n\r\n  getNowplaying = async () => {\r\n    const API_KEY = '61d6a02f15e10648230ab7c68e113835';\r\n    const {\r\n      data: { results },\r\n    } = await axios.get(\r\n      `https://api.themoviedb.org/3/movie/now_playing?api_key=${API_KEY}&language=ko-KR`\r\n      // `https://api.themoviedb.org/3/keyword/180547/movies?api_key=${API_KEY}&language=ko-KR&include_adult=true`,\r\n    );\r\n    // console.log(results);\r\n    //console.log(lists.data.results);\r\n    this.setState({ nowplaying: results, isLoading: false });\r\n  };\r\n\r\n  getUpcomming = async () => {\r\n    const API_KEY = '61d6a02f15e10648230ab7c68e113835';\r\n    const {\r\n      data: { results },\r\n    } = await axios.get(`https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=ko-KR`);\r\n    // console.log(results);\r\n    this.setState({ upcoming: results, isLoading: false });\r\n  };\r\n\r\n  getPopular = async () => {\r\n    const API_KEY = '61d6a02f15e10648230ab7c68e113835';\r\n    const {\r\n      data: { results },\r\n    } = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=ko-KR`);\r\n    // console.log(results);\r\n    this.setState({ popular: results, isLoading: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getNowplaying();\r\n    this.getUpcomming();\r\n    this.getPopular();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, nowplaying, upcoming, popular } = this.state;\r\n    return (\r\n      <>\r\n        <section className=\"wrapper\">\r\n          {isLoading ? (\r\n            <div className=\"loader\">\r\n              <span className=\"loading__text\">LOADING...</span>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"listBlock\">\r\n                <div className=\"container\">\r\n                  <MovieListTitle>Now playing</MovieListTitle>\r\n                  <ul className=\"movie__list\">\r\n                    {nowplaying.map((nowplaying) => (\r\n                      <Movie\r\n                        key={nowplaying.id}\r\n                        id={nowplaying.id}\r\n                        title={nowplaying.title}\r\n                        lang={nowplaying.original_language}\r\n                        overview={nowplaying.overview}\r\n                        poster={nowplaying.poster_path}\r\n                        date={nowplaying.release_date}\r\n                        rating={nowplaying.vote_average}\r\n                        genres={nowplaying.genre_ids}\r\n                        backdrop={nowplaying.backdrop_path}\r\n                      />\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"listBlock\">\r\n                <div className=\"container\">\r\n                  <MovieListTitle>Upcomming</MovieListTitle>\r\n                  <ul className=\"movie__list\">\r\n                    {upcoming.map((upcoming) => (\r\n                      <Movie\r\n                        key={upcoming.id}\r\n                        id={upcoming.id}\r\n                        title={upcoming.title}\r\n                        lang={upcoming.original_language}\r\n                        overview={upcoming.overview}\r\n                        poster={upcoming.poster_path}\r\n                        date={upcoming.release_date}\r\n                        rating={upcoming.vote_average}\r\n                        genres={upcoming.genre_ids}\r\n                        backdrop={upcoming.backdrop_path}\r\n                      />\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"listBlock\">\r\n                <div className=\"container\">\r\n                  <MovieListTitle>Popular</MovieListTitle>\r\n                  <ul className=\"movie__list\">\r\n                    {popular.map((popular) => (\r\n                      <Movie\r\n                        key={popular.id}\r\n                        id={popular.id}\r\n                        title={popular.title}\r\n                        lang={popular.original_language}\r\n                        overview={popular.overview}\r\n                        poster={popular.poster_path}\r\n                        date={popular.release_date}\r\n                        rating={popular.vote_average}\r\n                        genres={popular.genre_ids}\r\n                        backdrop={popular.backdrop_path}\r\n                      />\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport './Movie.scss';\r\n\r\nProgram.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  overview: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  lang: PropTypes.string.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n};\r\nfunction Program({ id, name, lang, overview, poster, date, rating, genres, backdrop }) {\r\n  return (\r\n    <li>\r\n      <Link\r\n        to={{\r\n          pathname: `/tv/${id}`,\r\n          state: {\r\n            name,\r\n            overview,\r\n            poster,\r\n            date,\r\n            lang,\r\n            genres,\r\n            backdrop,\r\n          },\r\n        }}\r\n      >\r\n        <img src={`https://image.tmdb.org/t/p/w500${poster}`} alt={name} title={name}></img>\r\n        <div className=\"list__text\">\r\n          <h5>{name}</h5>\r\n          <span>★{rating}</span>\r\n          {/* <span>{genres}</span> */}\r\n        </div>\r\n        <h4>{date.slice(0, 4)}</h4>\r\n      </Link>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Program;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Program from '../Components/Program';\r\nimport styled from 'styled-components';\r\n// import './Home.scss';\r\n\r\nconst MovieListTitle = styled.div`\r\n  /* border: 1px solid red; */\r\n  color: #fff;\r\n  font-size: 18px;\r\n  padding: 20px 0 0 10px;\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n`;\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    error: null,\r\n    popular: [],\r\n    topRated: [],\r\n    airingToday: [],\r\n  };\r\n\r\n  getTVpopular = async () => {\r\n    const API_KEY = '61d6a02f15e10648230ab7c68e113835';\r\n\r\n    const {\r\n      data: { results },\r\n    } = await axios.get(`https://api.themoviedb.org/3/tv/popular?api_key=${API_KEY}&language=ko-KR`).catch(function (error) {\r\n      console.log(error);\r\n    });\r\n    console.log(results);\r\n    //console.log(lists.data.results);\r\n    this.setState({ popular: results, isLoading: false });\r\n  };\r\n\r\n  getTopRated = async () => {\r\n    const API_KEY = '61d6a02f15e10648230ab7c68e113835';\r\n    const {\r\n      data: { results },\r\n    } = await axios.get(`https://api.themoviedb.org/3/tv/top_rated?api_key=${API_KEY}&language=ko-KR`);\r\n    // console.log(results);\r\n    this.setState({ topRated: results, isLoading: false });\r\n  };\r\n\r\n  getAiringToday = async () => {\r\n    const API_KEY = '61d6a02f15e10648230ab7c68e113835';\r\n    const {\r\n      data: { results },\r\n    } = await axios.get(`https://api.themoviedb.org/3/tv/airing_today?api_key=${API_KEY}&language=ko-KR`);\r\n    console.log(results);\r\n    this.setState({ airingToday: results, isLoading: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getTVpopular();\r\n    this.getTopRated();\r\n    this.getAiringToday();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, error, popular, topRated, airingToday } = this.state;\r\n    return (\r\n      <>\r\n        <section className=\"wrapper\">\r\n          {isLoading ? (\r\n            <div className=\"loader\">\r\n              <span className=\"loading__text\">LOADING...</span>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"listBlock\">\r\n                <div className=\"container\">\r\n                  <MovieListTitle>TV POPULAR program</MovieListTitle>\r\n                  <ul className=\"movie__list\">\r\n                    {popular.map((popular) => (\r\n                      <Program\r\n                        key={popular.id}\r\n                        id={popular.id}\r\n                        name={popular.name}\r\n                        title={popular.original_name}\r\n                        overview={popular.overview}\r\n                        poster={popular.poster_path}\r\n                        lang={popular.original_language}\r\n                        date={popular.first_air_date}\r\n                        rating={popular.vote_average}\r\n                        genres={popular.genre_ids}\r\n                        backdrop={popular.backdrop_path}\r\n                        error={error}\r\n                      />\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"listBlock\">\r\n                <div className=\"container\">\r\n                  <MovieListTitle>top Rated</MovieListTitle>\r\n                  <ul className=\"movie__list\">\r\n                    {topRated.map((topRated) => (\r\n                      <Program\r\n                        key={topRated.id}\r\n                        id={topRated.id}\r\n                        name={topRated.name}\r\n                        title={topRated.original_name}\r\n                        overview={topRated.overview}\r\n                        poster={topRated.poster_path}\r\n                        lang={topRated.original_language}\r\n                        date={topRated.first_air_date}\r\n                        rating={topRated.vote_average}\r\n                        genres={topRated.genre_ids}\r\n                        backdrop={topRated.backdrop_path}\r\n                      />\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"listBlock\">\r\n                <div className=\"container\">\r\n                  <MovieListTitle>airingToday</MovieListTitle>\r\n                  <ul className=\"movie__list\">\r\n                    {airingToday.map((airingToday) => (\r\n                      <Program\r\n                        key={airingToday.id}\r\n                        id={airingToday.id}\r\n                        name={airingToday.name}\r\n                        title={airingToday.original_name}\r\n                        overview={airingToday.overview}\r\n                        poster={airingToday.poster_path}\r\n                        lang={airingToday.original_language}\r\n                        date={airingToday.first_air_date}\r\n                        rating={airingToday.vote_average}\r\n                        genres={airingToday.genre_ids}\r\n                        backdrop={airingToday.backdrop_path}\r\n                      />\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../Components/Movie';\r\nimport styled from 'styled-components';\r\nimport './Home.scss';\r\n\r\nconst MovieListTitle = styled.div`\r\n  /* border: 1px solid red; */\r\n  color: #fff;\r\n  font-size: 18px;\r\n  padding: 20px 0 0 10px;\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  all: unset;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 36px;\r\n  color: white;\r\n  width: calc(100% - 80px);\r\n  margin-top: 80px;\r\n  border-bottom: 2px solid #fff;\r\n  padding: 10px 20px;\r\n  margin: 80px 20px 0 20px;\r\n`;\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    searchlist: [],\r\n    searchingText: '',\r\n    tvsearchlist: [],\r\n  };\r\n\r\n  onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n\r\n    this.setState({\r\n      searchingText: value,\r\n    });\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { searchingText } = this.state;\r\n    if (searchingText !== '') {\r\n      this.movieSearch(searchingText);\r\n    }\r\n  };\r\n\r\n  movieSearch = async (searchingText) => {\r\n    const API_KEY = '61d6a02f15e10648230ab7c68e113835';\r\n\r\n    const {\r\n      data: { results },\r\n    } = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchingText}`);\r\n    console.log(results);\r\n    //console.log(lists.data.results);\r\n    this.setState({ searchlist: results, isLoading: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.movieSearch();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, searchlist, searchingText } = this.state;\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Input placeholder=\"Search for a Movie or TV Show\" autoFocus={true} onChange={this.onChange} value={searchingText} />\r\n        </Form>\r\n        {\r\n          <section className=\"wrapper\">\r\n            {isLoading ? (\r\n              <div className=\"loader\">\r\n                <span className=\"loading__text\">LOADING...</span>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className=\"listBlock\">\r\n                  <div className=\"container\">\r\n                    <MovieListTitle>search results</MovieListTitle>\r\n                    <ul className=\"movie__list\">\r\n                      {searchlist.map((searchlist) => (\r\n                        <Movie\r\n                          key={searchlist.id}\r\n                          id={searchlist.id}\r\n                          title={searchlist.title}\r\n                          lang={searchlist.original_language}\r\n                          overview={searchlist.overview}\r\n                          poster={searchlist.poster_path}\r\n                          date={searchlist.release_date}\r\n                          rating={searchlist.vote_average}\r\n                          genres={searchlist.genre_ids}\r\n                          backdrop={searchlist.backdrop_path}\r\n                        />\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </section>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst DetailContent = styled.div`\r\n  margin-top: 56px;\r\n  width: 100%;\r\n  height: 100%;\r\n  height: calc(100vh - 45px);\r\n  position: relative;\r\n  padding: 100px;\r\n  display: flex;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url(${(props) => props.bgImage});\r\n  background-size: 100%;\r\n  background-position: center center;\r\n  position: absolute;\r\n  filter: blur(5px);\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 0;\r\n`;\r\n\r\nconst DetailBlock = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  display: flex;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  overflow: auto;\r\n`;\r\nconst Image = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-size: cover;\r\n  background-position: center center;\r\n`;\r\nconst DetailText = styled.div`\r\n  color: rgba(255, 255, 255, 0.9);\r\n  padding: 50px;\r\n  font-size: 12px;\r\n  width: 70%;\r\n\r\n  h5 {\r\n    font-size: 24px;\r\n    padding-bottom: 20px;\r\n  }\r\n\r\n  div {\r\n    line-height: 1.8rem;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  span {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\nconst Bullet = styled.div`\r\n  margin: 10px;\r\n  display: inline-block;\r\n`;\r\n\r\nclass Detail extends React.Component {\r\n  componentDidMount() {\r\n    const { location, history } = this.props;\r\n\r\n    if (location.state === undefined) {\r\n      history.push('/');\r\n    }\r\n  }\r\n  render() {\r\n    const { location } = this.props;\r\n    if (location.state) {\r\n      return (\r\n        <DetailContent>\r\n          <Poster bgImage={`https://image.tmdb.org/t/p/original${location.state.backdrop}`} />\r\n          <DetailBlock>\r\n            <Image bgImage={`https://image.tmdb.org/t/p/w500${location.state.poster}`} />\r\n            <DetailText>\r\n              <h5>{location.state.title}</h5>\r\n\r\n              <span>{location.state.date.substring(0, 4)}</span>\r\n              <Bullet>•</Bullet>\r\n              <span>{location.state.lang}</span>\r\n\r\n              <div>{location.state.overview}</div>\r\n            </DetailText>\r\n          </DetailBlock>\r\n        </DetailContent>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst DetailContent = styled.div`\r\n  margin-top: 56px;\r\n  width: 100%;\r\n  height: 100%;\r\n  height: calc(100vh - 45px);\r\n  position: relative;\r\n  padding: 100px;\r\n  display: flex;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url(${(props) => props.bgImage});\r\n  background-size: 100%;\r\n  background-position: center center;\r\n  position: absolute;\r\n  filter: blur(5px);\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 0;\r\n`;\r\n\r\nconst DetailBlock = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  display: flex;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  overflow: auto;\r\n`;\r\nconst Image = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-size: cover;\r\n  background-position: center center;\r\n`;\r\nconst DetailText = styled.div`\r\n  color: rgba(255, 255, 255, 0.9);\r\n  padding: 50px;\r\n  font-size: 12px;\r\n  width: 70%;\r\n\r\n  h5 {\r\n    font-size: 24px;\r\n    padding-bottom: 20px;\r\n  }\r\n\r\n  div {\r\n    line-height: 1.8rem;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  span {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\nconst Bullet = styled.div`\r\n  margin: 10px;\r\n  display: inline-block;\r\n`;\r\n\r\nclass DetailTV extends React.Component {\r\n  componentDidMount() {\r\n    const { location, history } = this.props;\r\n\r\n    if (location.state === undefined) {\r\n      history.push('/');\r\n    }\r\n  }\r\n  render() {\r\n    const { location } = this.props;\r\n    if (location.state) {\r\n      return (\r\n        <DetailContent>\r\n          <Poster bgImage={`https://image.tmdb.org/t/p/original${location.state.backdrop}`} />\r\n          <DetailBlock>\r\n            <Image bgImage={`https://image.tmdb.org/t/p/w500${location.state.poster}`} />\r\n            <DetailText>\r\n              <h5>{location.state.title}</h5>\r\n\r\n              <span>{location.state.date.substring(0, 4)}</span>\r\n              <Bullet>•</Bullet>\r\n              <span>{location.state.lang}</span>\r\n\r\n              <div>{location.state.overview}</div>\r\n            </DetailText>\r\n          </DetailBlock>\r\n        </DetailContent>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DetailTV;\r\n","import React from 'react';\nimport { Route, NavLink, Switch, Link } from 'react-router-dom'; //1)\nimport Home from './Routes/Home';\nimport TV from './Routes/TV';\nimport Search from './Routes/Search';\nimport Detail from './Routes/Detail';\nimport styled from 'styled-components';\nimport DetailTV from './Routes/DetailTV';\n\nconst Header = styled.ul`\n  background: pink;\n  display: flex;\n  align-items: center;\n  margin: 0;\n  z-index: 1;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 56px;\n  line-height: 56px;\n  background: rgb(14, 14, 14);\n  padding: 20px 30px;\n  box-shadow: 0 13px 27px -5px rgba(50, 50, 93, 0.25), 0 8px 16px -8px rgba(0, 0, 0, 0.3), 0 -6px 16px -6px rgba(0, 0, 0, 0.025);\n  a {\n    text-decoration: none;\n    color: white;\n    text-transform: uppercase;\n    font-size: 12px;\n    text-align: center;\n    font-weight: 600;\n    padding: 0 15px;\n    /* padding-bottom: 20px; */\n    display: block;\n    width: 100px;\n    &::not(:last-child) {\n      margin-bottom: 30px;\n    }\n  }\n  li {\n    list-style: none;\n    padding: 0;\n    flex: none;\n    &.search {\n      /* border: 1px solid red; */\n      margin-left: auto;\n      margin-right: 15px;\n      input {\n        height: 24px;\n      }\n    }\n    &.title a {\n      font-size: 26px;\n      width: auto;\n      padding-bottom: 0;\n      margin-right: 20px;\n    }\n  }\n  @media screen and (max-width: 768px) {\n    padding-left: 0;\n    padding-right: 0;\n    .title {\n      display: none;\n    }\n    form {\n      /* border: 1px solid red; */\n      /* width: 100px; */\n    }\n  }\n`;\n\nfunction App() {\n  const activestyle = {\n    background: 'red',\n    color: 'white',\n  };\n  return (\n    <div>\n      <Header>\n        <li className=\"title\">\n          <Link to=\"/\">THE MOVIES</Link>\n        </li>\n        <li>\n          <NavLink to=\"/\" exact activeStyle={activestyle} activeClassName=\"active\">\n            MOVIES\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/tv\" activeStyle={activestyle}>\n            TV\n          </NavLink>\n        </li>\n        <li className=\"search\">\n          <NavLink to=\"/search\" activeStyle={activestyle}>\n            search\n          </NavLink>\n        </li>\n      </Header>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/tv/:id\" component={DetailTV} />\n        <Route path=\"/search\" component={Search} />\n        <Route\n          render={({ location }) => (\n            <div>\n              <h2>이 페이지는 존재하지 않습니다.</h2>\n              <p>{location.pathname}</p>\n            </div>\n          )}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n\n/*\n<li className=\"search\">\n          <form>\n            <input type=\"text\" placeholder=\"Search...\" />\n            // {/* value={this.props.filterText} onChange={this.handleFilterTextChange}  */\n//             </form>\n//             </li>\n\n// */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset};\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    a{\r\n        color:inherit;\r\n        text-decoration:none;\r\n    }\r\n    body{\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif !important;\r\n        font-size:16px;\r\n        background-color:rgb(41, 41, 41);\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport GlobalStyles from './GlobalStyles';\n\nReactDOM.render(\n  <BrowserRouter basename={window.location.pathname || 'thecinema'}>\n    <GlobalStyles />\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}